'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _composeStyle = require('../composeStyle');

var _composeStyle2 = _interopRequireDefault(_composeStyle);

var _constants = require('../constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var load = _constants.icons.load,
    loading = _constants.icons.loading,
    loaded = _constants.icons.loaded,
    error = _constants.icons.error,
    noicon = _constants.icons.noicon,
    offline = _constants.icons.offline;

var Media = function (_PureComponent) {
  _inherits(Media, _PureComponent);

  function Media() {
    _classCallCheck(this, Media);

    return _possibleConstructorReturn(this, (Media.__proto__ || Object.getPrototypeOf(Media)).apply(this, arguments));
  }

  _createClass(Media, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (this.props.onDimensions && this.dimensionElement) this.props.onDimensions({
        width: this.dimensionElement.clientWidth,
        height: this.dimensionElement.clientHeight
      });
    }
  }, {
    key: 'renderIcon',
    value: function renderIcon(props) {
      var icon = props.icon,
          icons = props.icons,
          fill = props.iconColor,
          size = props.iconSize,
          theme = props.theme;

      var iconToRender = icons[icon];
      if (!iconToRender) return null;
      var styleOrClass = (0, _composeStyle2.default)({ width: size + 100, height: size, color: fill }, theme.icon);
      return _react2.default.createElement('div', styleOrClass, [_react2.default.createElement(iconToRender, { fill: fill, size: size, key: 'icon' }), _react2.default.createElement('br', { key: 'br' }), this.props.message]);
    }
  }, {
    key: 'renderImage',
    value: function renderImage(props) {
      var _this2 = this;

      return props.icon === loaded ? _react2.default.createElement('img', _extends({}, (0, _composeStyle2.default)(props.theme.img), {
        src: props.src,
        alt: props.alt,
        width: props.width,
        height: props.height
      })) : _react2.default.createElement('svg', _extends({}, (0, _composeStyle2.default)(props.theme.img), {
        width: props.width,
        height: props.height,
        ref: function ref(_ref) {
          return _this2.dimensionElement = _ref;
        }
      }));
    }
  }, {
    key: 'renderNoscript',
    value: function renderNoscript(props) {
      return props.ssr ? _react2.default.createElement(
        'noscript',
        null,
        _react2.default.createElement('img', _extends({}, (0, _composeStyle2.default)(props.theme.img, props.theme.noscript), {
          src: props.nsSrc,
          srcSet: props.nsSrcSet,
          alt: props.alt,
          width: props.width,
          height: props.height
        }))
      ) : null;
    }
  }, {
    key: 'render',
    value: function render() {
      var props = this.props;
      var placeholder = props.placeholder,
          theme = props.theme;

      var background = void 0;
      if (props.icon === loaded) {
        background = {};
      } else if (placeholder.lqip) {
        background = {
          backgroundImage: 'url("' + placeholder.lqip + '")'
        };
      } else {
        background = {
          backgroundColor: placeholder.color
        };
      }
      return _react2.default.createElement(
        'div',
        _extends({}, (0, _composeStyle2.default)(theme.placeholder, background, props.style, props.className), {
          onClick: this.props.onClick,
          onKeyPress: this.props.onClick,
          ref: this.props.innerRef
        }),
        this.renderImage(props),
        this.renderNoscript(props),
        this.renderIcon(props)
      );
    }
  }]);

  return Media;
}(_react.PureComponent);

Media.propTypes = {
  /** URL of the image */
  src: _propTypes2.default.string.isRequired,
  /** Width of the image in px */
  width: _propTypes2.default.number.isRequired,
  /** Height of the image in px */
  height: _propTypes2.default.number.isRequired,
  placeholder: _propTypes2.default.oneOfType([_propTypes2.default.shape({
    /** Solid color placeholder */
    color: _propTypes2.default.string.isRequired
  }), _propTypes2.default.shape({
    /**
     * [Low Quality Image Placeholder](https://github.com/zouhir/lqip)
     * [SVG-Based Image Placeholder](https://github.com/technopagan/sqip)
     * base64 encoded image of low quality
     */
    lqip: _propTypes2.default.string.isRequired
  })]).isRequired,
  /** Alternative text */
  alt: _propTypes2.default.string,
  /** Color of the icon */
  iconColor: _propTypes2.default.string,
  /** Size of the icon in px */
  iconSize: _propTypes2.default.number,
  /** React's style attribute for root element of the component */
  style: _propTypes2.default.object,
  /** React's className attribute for root element of the component */
  className: _propTypes2.default.string,
  /** On click handler */
  onClick: _propTypes2.default.func,
  /** display icon */
  icon: _propTypes2.default.oneOf([load, loading, loaded, error, noicon, offline]),
  /** Map of icons */
  icons: _propTypes2.default.object,
  /** theme object - CSS Modules or React styles */
  theme: _propTypes2.default.object,
  /** callback to get dimensions of the placeholder */
  onDimensions: _propTypes2.default.func,
  /** message to show below the icon */
  message: _propTypes2.default.node,
  /** reference for Waypoint */
  innerRef: _propTypes2.default.func,
  /** noscript image src */
  nsSrc: _propTypes2.default.string,
  /** noscript image srcSet */
  nsSrcSet: _propTypes2.default.string
};
Media.defaultProps = {
  iconColor: '#fff',
  iconSize: 64
};
exports.default = Media;
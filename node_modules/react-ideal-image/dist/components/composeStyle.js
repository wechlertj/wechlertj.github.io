'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

/**
 * Composes styles and/or classes
 *
 * For classes it will concat them in in one string
 * and return as `className` property.
 * Alternative is https://github.com/JedWatson/classnames
 *
 * For objects it will merge them in one object
 * and return as `style` property.
 *
 * Usage:
 * Asume you have `theme` object, which can be css-module
 * or object or other css-in-js compatible with css-module
 *
 * <a {...compose(theme.link, theme.active, {color: "#000"})}>link</a>
 *
 * @returns {{className: string, style: object}} - params for React component
 */
exports.default = function () {
  for (var _len = arguments.length, stylesOrClasses = Array(_len), _key = 0; _key < _len; _key++) {
    stylesOrClasses[_key] = arguments[_key];
  }

  var classes = [];
  var style = void 0;
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = stylesOrClasses[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var obj = _step.value;

      if (obj instanceof Object) {
        Object.assign(style || (style = {}), obj);
      } else if (obj === undefined || obj === false) {
        // ignore
      } else if (typeof obj === 'string') {
        classes.push(obj);
      } else {
        throw new Error('Unexpected value ' + obj);
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return {
    className: classes.length > 1 ? classes.join(' ') : classes[0],
    style: style
  };
};